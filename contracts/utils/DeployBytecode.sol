pragma solidity 0.8.7;

contract DeployBytecode {
  bytes public contractBytecode = hex"608060405234801561001057600080fd5b506101fa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b578063d018db3e14610059575b600080fd5b610043610075565b6040516100509190610151565b60405180910390f35b610073600480360381019061006e9190610115565b61009d565b005b60007f736d617278000000000000000000000000000000000000000000000000000000905090565b8073ffffffffffffffffffffffffffffffffffffffff1663380c7a676040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100e557600080fd5b505af11580156100f9573d6000803e3d6000fd5b5050505050565b60008135905061010f816101ad565b92915050565b60006020828403121561012b5761012a6101a8565b5b600061013984828501610100565b91505092915050565b61014b8161017e565b82525050565b60006020820190506101666000830184610142565b92915050565b600061017782610188565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101b68161016c565b81146101c157600080fd5b5056fea264697066735822122023d5c3356e72647e75bcce37ab4b66eb0b698f722b7cc765eaa016902d796d8064736f6c63430008070033";
  address public addressDeploy;

  function deploy(bytes32 salt) public returns(address){
    bytes memory bytecode = contractBytecode;
    address addr;
      
    assembly {
      addr := create2(0, add(bytecode, 0x20), mload(bytecode), salt)
    }
    return addr;
  }

  function hashBytecode() public view returns(bytes32){
      return keccak256(contractBytecode);
  }
  
  function getAddress(uint _salt)
        public
        view
        returns (address)
    {
        bytes32 hash = keccak256(
            abi.encodePacked(bytes1(0xff), address(this), _salt, keccak256(contractBytecode))
        );

        // NOTE: cast last 20 bytes of hash to address
        return address(uint160(uint(hash)));
    }

}